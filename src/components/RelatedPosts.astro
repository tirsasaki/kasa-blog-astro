---
import { getCollection } from 'astro:content';
import { Image } from 'astro:assets';

interface Props {
  currentSlug: string;
  tags: string[];
  categories: string[];
}

const { currentSlug, tags, categories } = Astro.props;

const posts = await getCollection('blog');
const relatedPosts = posts
  .filter(post => post.slug !== currentSlug)
  .filter(post => {
    const hasMatchingTag = post.data.tags?.some(tag => tags.includes(tag));
    const hasMatchingCategory = post.data.categories?.some(cat => categories.includes(cat));
    return hasMatchingTag || hasMatchingCategory;
  })
  .slice(0, 3);
---

{relatedPosts.length > 0 && (
  <section class="mt-16 border-t dark:border-gray-800 pt-8">
    <h2 class="text-2xl font-bold mb-6 text-gray-900 dark:text-white">Related Posts</h2>
    <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
      {relatedPosts.map(post => (
        <a href={`/blog/${post.slug}`} class="group">
          <article class="bg-gray-100 dark:bg-gray-800 rounded-xl overflow-hidden hover:shadow-lg transition-shadow">
            {post.data.image && (
              <div class="aspect-video overflow-hidden">
                <Image
                  src={post.data.image}
                  alt={post.data.title}
                  width={400}
                  height={225}
                  class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
                />
              </div>
            )}
            <div class="p-4">
              <h3 class="font-semibold text-gray-900 dark:text-white group-hover:text-blue-600 dark:group-hover:text-blue-400 line-clamp-2">
                {post.data.title}
              </h3>
              <p class="text-sm text-gray-600 dark:text-gray-400 mt-2 line-clamp-2">
                {post.data.description}
              </p>
            </div>
          </article>
        </a>
      ))}
    </div>
  </section>
)}
