---
import Layout from './Layout.astro';
import { Image } from 'astro:assets';
import Breadcrumbs from '../components/Breadcrumbs.astro';
import SocialShare from '../components/SocialShare.astro';
import RelatedPosts from '../components/RelatedPosts.astro';
import { getCollection } from 'astro:content';

interface Props {
  title: string;
  description: string;
  pubDate: Date;
  author: string;
  slug: string;  // Added slug to Props interface
  image?: string;
  tags?: string[];
  categories?: string[];
}

const { title, description, pubDate, author, slug, image, tags = [], categories = [] } = Astro.props;

const formattedDate = new Date(pubDate).toLocaleDateString('id-ID', {
  year: 'numeric',
  month: 'long',
  day: 'numeric',
});

const url = Astro.url.href;

const posts = await getCollection('blog');
const sortedPosts = posts.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
const currentIndex = sortedPosts.findIndex(post => post.slug === slug);
const prevPost = sortedPosts[currentIndex + 1];
const nextPost = sortedPosts[currentIndex - 1];
---

<Layout title={title} description={description}>
  <article class="max-w-4xl mx-auto">
    <Breadcrumbs 
      pageName={title}
      category={categories.length > 0 ? categories[0] : undefined}
    />
    
    <!-- Hero Section -->
    <div class="relative h-[60vh] min-h-[400px] mb-8 rounded-2xl overflow-hidden">
      {image && (
        <Image
          src={image}
          alt={title}
          width={1200}
          height={630}
          class="w-full h-full object-cover"
        />
      )}
      <div class="absolute inset-0 bg-gradient-to-t from-black/70 to-transparent"></div>
      <div class="absolute bottom-0 left-0 right-0 p-8 text-white">
        <!-- Categories -->
        {categories.length > 0 && (
          <div class="flex gap-2 mb-4">
            {categories.map(category => (
              <a 
                href={`/categories/${category.toLowerCase()}`}
                class="px-3 py-1 text-sm bg-blue-600/90 rounded-full hover:bg-blue-700/90 transition-colors backdrop-blur-sm"
              >
                {category}
              </a>
            ))}
          </div>
        )}
        <h1 class="text-4xl md:text-5xl font-bold mb-4">{title}</h1>
        <div class="flex items-center gap-4 text-gray-200">
          <span class="flex items-center">
            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
            </svg>
            {author}
          </span>
          <span class="flex items-center">
            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
            </svg>
            {formattedDate}
          </span>
        </div>
      </div>
    </div>

    <!-- Content -->
    <div class="px-4">
      <!-- Social Share -->
      <div class="mb-8">
        <SocialShare title={title} description={description} url={url} />
      </div>

      <!-- Article Content -->
      <div class="prose dark:prose-invert prose-lg max-w-none mb-12">
        <slot />
      </div>

      <!-- Tags Section -->
      {tags.length > 0 && (
        <div class="border-t dark:border-gray-800 pt-8 mb-8">
          <div class="flex items-center flex-wrap gap-3">
            <span class="font-medium text-gray-900 dark:text-white">Tags:</span>
            {tags.map(tag => (
              <a
                href={`/tags/${tag.toLowerCase().replace(/\s+/g, '-')}`}
                class="px-4 py-1.5 text-sm bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-300 
                       rounded-full hover:bg-blue-100 dark:hover:bg-blue-900/30 hover:text-blue-700 
                       dark:hover:text-blue-300 transition-colors"
              >
                #{tag}
              </a>
            ))}
          </div>
        </div>
      )}

      <!-- Next/Prev Post Navigation -->
      <nav class="flex justify-between items-center border-t dark:border-gray-800 py-8 mb-8">
        {prevPost ? (
          <a 
            href={`/blog/${prevPost.slug}`}
            class="group flex items-center text-left max-w-[45%]"
          >
            <svg class="w-5 h-5 mr-2 transform group-hover:-translate-x-1 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16l-4-4m0 0l4-4m-4 4h18" />
            </svg>
            <div>
              <span class="block text-sm text-gray-600 dark:text-gray-400 mb-1">Previous Post</span>
              <span class="block font-medium text-gray-900 dark:text-white line-clamp-1 group-hover:text-blue-600 dark:group-hover:text-blue-400">
                {prevPost.data.title}
              </span>
            </div>
          </a>
        ) : <div/>}

        {nextPost ? (
          <a 
            href={`/blog/${nextPost.slug}`}
            class="group flex items-center text-right max-w-[45%] ml-auto"
          >
            <div>
              <span class="block text-sm text-gray-600 dark:text-gray-400 mb-1">Next Post</span>
              <span class="block font-medium text-gray-900 dark:text-white line-clamp-1 group-hover:text-blue-600 dark:group-hover:text-blue-400">
                {nextPost.data.title}
              </span>
            </div>
            <svg class="w-5 h-5 ml-2 transform group-hover:translate-x-1 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3" />
            </svg>
          </a>
        ) : <div/>}
      </nav>

      <!-- Related Posts -->
      <RelatedPosts currentSlug={slug} tags={tags} categories={categories} />
    </div>
  </article>
</Layout>

<style is:global>
  /* Add any additional custom styles for your markdown content here */
  .prose {
    @apply text-gray-900 dark:text-gray-100;
  }
  .prose pre {
    @apply bg-gray-900 dark:bg-gray-800 text-gray-100;
  }
  .prose img {
    @apply rounded-xl shadow-lg mx-auto;
  }
  .prose a {
    @apply text-blue-600 dark:text-blue-400 no-underline hover:underline;
  }
</style>
